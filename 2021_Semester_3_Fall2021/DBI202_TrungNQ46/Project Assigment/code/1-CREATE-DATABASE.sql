CREATE DATABASE FAHASA;
GO
USE FAHASA;
GO

--DROP DATABASE FAHASA;

CREATE TABLE PUBLISHER
(
  PubID INT NOT NULL,
  PubName NVARCHAR(50) NOT NULL,
  PubImage VARCHAR(255),
  PRIMARY KEY (PubID)
);

CREATE TABLE BOOK_AUTHOR
(
  AID INT NOT NULL,
  AName NVARCHAR(50) NOT NULL,
  AImage VARCHAR(255),
  ANationality VARCHAR(15),
  PRIMARY KEY (AID)
);

CREATE TABLE SUPPLIER
(
  SupID INT NOT NULL,
  SupName NVARCHAR(50) NOT NULL,
  PRIMARY KEY (SupID)
);

CREATE TABLE DISCOUNT_PROGRAM
(
  DID INT NOT NULL,
  DName NVARCHAR(100) NOT NULL,
  DRate FLOAT NOT NULL,
  DLimit INT NOT NULL,
  StartedDate DATE NOT NULL,
  EndedDate DATE,
  PRIMARY KEY (DID),
  CONSTRAINT chk_Rate CHECK (DRate BETWEEN 0.0 AND 1.0),
  CONSTRAINT chk_limit CHECK (DLimit >= 0)
);

CREATE TABLE USERS
(
  UID INT NOT NULL,
  Username VARCHAR(50) NOT NULL,
  Password VARCHAR(255) NOT NULL,
  UFirstName NVARCHAR(10),
  UMiddleName NVARCHAR(30),
  ULastName NVARCHAR(10),
  DOB DATE,
  Sex VARCHAR(1),
  UPhone VARCHAR(15),
  UImage VARCHAR(255),
  RegisterDate DATETIME NOT NULL,
  URank VARCHAR(50) NOT NULL,
  PRIMARY KEY (UID),
  UNIQUE (Username),
  CONSTRAINT chk_usex CHECK (Sex IN ('F' ,'M')),
  CONSTRAINT chk_rank CHECK (URank IN ('brown', 'silver', 'gold', 'diamond', 'newbie')),
  CONSTRAINT chk_udate CHECK (DOB <= GETDATE() AND RegisterDate <= GETDATE())
);

CREATE TABLE BRANCH
(
  BrID INT NOT NULL,
  BrAddress NVARCHAR(255) NOT NULL,
  BrName NVARCHAR(50) NOT NULL,
  PRIMARY KEY (BrID)
);

CREATE TABLE VOUCHER
(
  VID INT NOT NULL,
  VName NVARCHAR(100) NOT NULL,
  VRate FLOAT NOT NULL,
  VLimit INT NOT NULL,
  VLeastMoney INT NOT NULL,
  StartedDate DATE NOT NULL,
  EndedDate DATE,
  FreeshipIncluded BIT NOT NULL,
  PRIMARY KEY (VID),
  CONSTRAINT chk_vrate CHECK (VRate BETWEEN 0.0 AND 1.0),
  CONSTRAINT chk_vlimit CHECK(VLimit >= 0),
  CONSTRAINT chk_vleastmoney CHECK(VLeastMoney >= 0)
);

CREATE TABLE HAS_VOUCHER
(
  UsesRemaining INT NOT NULL,
  VID INT NOT NULL,
  UID INT NOT NULL,
  PRIMARY KEY (VID, UID),
  FOREIGN KEY (VID) REFERENCES VOUCHER(VID),
  FOREIGN KEY (UID) REFERENCES USERS(UID),
  CONSTRAINT chk_usesremaining CHECK (UsesRemaining >= 0)
);

CREATE TABLE USER_ADDRESSES
(
  UAddresses NVARCHAR(255) NOT NULL,
  UID INT NOT NULL,
  PRIMARY KEY (UAddresses, UID),
  FOREIGN KEY (UID) REFERENCES USERS(UID)
);

CREATE TABLE PRODUCT
(
  PID INT NOT NULL,
  PCategory VARCHAR(20) NOT NULL,
  PUnit VARCHAR(10) NOT NULL,
  PImportedDate DATETIME NOT NULL,
  PName NVARCHAR(255) NOT NULL,
  PPrice INTEGER NOT NULL,
  PImage VARCHAR(255),
  SupID INT NOT NULL,
  PRIMARY KEY (PID),
  FOREIGN KEY (SupID) REFERENCES SUPPLIER(SupID),
  CONSTRAINT chk_cate CHECK (PCategory IN ('book', 'stationery')),
  CONSTRAINT chk_price CHECK (PPrice >= 0),
  CONSTRAINT chk_prodate CHECK (PImportedDate <= GETDATE())

);

CREATE TABLE BOOK
(
  PubDate DATE NOT NULL,
  Translator NVARCHAR(50),
  NoPages INT NOT NULL,
  BGroup VARCHAR(20),
  AID INT NOT NULL,
  PubID INT NOT NULL,
  PID INT NOT NULL,
  PRIMARY KEY (PID),
  FOREIGN KEY (AID) REFERENCES BOOK_AUTHOR(AID),
  FOREIGN KEY (PubID) REFERENCES PUBLISHER(PubID),
  FOREIGN KEY (PID) REFERENCES PRODUCT(PID),
  CONSTRAINT chk_nopages CHECK (NoPages > 0),
  CONSTRAINT chk_bookdate CHECK (PubDate <= GETDATE())
);

CREATE TABLE STATIONERY
(
  SWeight FLOAT NOT NULL,
  SGroup VARCHAR(20),
  SMaterial VARCHAR(20),
  PID INT NOT NULL,
  PRIMARY KEY (PID),
  FOREIGN KEY (PID) REFERENCES PRODUCT(PID),
  CONSTRAINT chk_weight CHECK (SWeight > 0.0)
);

CREATE TABLE EMPLOYEE
(
  EID INT NOT NULL,
  Username VARCHAR(50) NOT NULL,
  Password VARCHAR(255) NOT NULL,
  EFirstName NVARCHAR(10) NOT NULL,
  EMiddleName NVARCHAR(30) NOT NULL,
  ELastName NVARCHAR(10) NOT NULL,
  EAddress NVARCHAR(255) NOT NULL,
  DOB DATE NOT NULL,
  Sex VARCHAR(1) NOT NULL,
  EPhone VARCHAR(15) NOT NULL,
  InDate DATETIME NOT NULL,
  OutDate DATETIME,
  EImage VARCHAR(255) NOT NULL,
  BrID INT NOT NULL,
  PRIMARY KEY (EID),
  FOREIGN KEY (BrID) REFERENCES BRANCH(BrID),
  UNIQUE (Username),
  CONSTRAINT chk_sex CHECK (Sex IN ('F', 'M')),
  CONSTRAINT chk_empldate CHECK (DOB <= GETDATE() and InDate <= GETDATE())

);

CREATE TABLE BILL
(
  BID INT NOT NULL,
  BDate DATETIME NOT NULL,
  PaymentMethod VARCHAR(15) NOT NULL,
  PaymentCode VARCHAR(50) NOT NULL,
  IsPaid BIT NOT NULL,
  VID INT NOT NULL,
  PRIMARY KEY (BID),
  FOREIGN KEY (VID) REFERENCES VOUCHER(VID),
  UNIQUE (PaymentCode),
  CONSTRAINT chk_paymentmethod CHECK (PaymentMethod IN ('cash', 'credit card', 'MOMO', 'ViettelPay')),
  CONSTRAINT chk_billdate CHECK (BDate <= GETDATE())
);

CREATE TABLE P_DISCOUNT
(
  PID INT NOT NULL,
  DID INT NOT NULL,
  PRIMARY KEY (PID, DID),
  FOREIGN KEY (PID) REFERENCES PRODUCT(PID),
  FOREIGN KEY (DID) REFERENCES DISCOUNT_PROGRAM(DID)
);

CREATE TABLE IN_BILL
(
  Amount INT NOT NULL,
  BID INT NOT NULL,
  PID INT NOT NULL,
  DID INT NOT NULL,
  PRIMARY KEY (BID, PID),
  FOREIGN KEY (BID) REFERENCES BILL(BID),
  FOREIGN KEY (PID) REFERENCES PRODUCT(PID),
  FOREIGN KEY (DID) REFERENCES DISCOUNT_PROGRAM(DID),
  CONSTRAINT chk_ibamount CHECK (Amount > 0)
);

CREATE TABLE INVENTORY
(
  Amount INT NOT NULL,
  BrID INT NOT NULL,
  PID INT NOT NULL,
  PRIMARY KEY (BrID, PID),
  FOREIGN KEY (BrID) REFERENCES BRANCH(BrID),
  FOREIGN KEY (PID) REFERENCES PRODUCT(PID),
  CONSTRAINT chk_iamount CHECK (Amount >= 0)
);

CREATE TABLE LEADS
(
  StartedDate DATETIME NOT NULL,
  EndedDate DATETIME,
  BrID INT NOT NULL,
  EID INT NOT NULL,
  PRIMARY KEY (BrID, EID),
  FOREIGN KEY (BrID) REFERENCES BRANCH(BrID),
  FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID),
  CONSTRAINT chk_leaddate CHECK (StartedDate <= GETDATE())
);

CREATE TABLE EMPL_ATTENDENCE
(
  Date DATE NOT NULL,
  Slot INT NOT NULL,
  IsAttended BIT,
  EID INT NOT NULL,
  PRIMARY KEY (Date, Slot, EID),
  FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID)
);

CREATE TABLE EMPL_WORKINGTIME
(
  DoW VARCHAR(1) NOT NULL,
  Slot INT NOT NULL,
  EID INT NOT NULL,
  PRIMARY KEY (DoW, Slot, EID),
  FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID),
  CONSTRAINT chk_dow CHECK (DoW IN ('M', 'T', 'W', 'R', 'F', 'S', 'U')),
  CONSTRAINT chk_slot CHECK (Slot > 0 AND Slot <= 10)
);

CREATE TABLE OFFLINE_BILL
(
  CustomerName NVARCHAR(50),
  CustomerPhone VARCHAR(15),
  EID INT NOT NULL,
  BrID INT NOT NULL,
  BID INT NOT NULL,
  PRIMARY KEY (BID),
  FOREIGN KEY (EID) REFERENCES EMPLOYEE(EID),
  FOREIGN KEY (BrID) REFERENCES BRANCH(BrID),
  FOREIGN KEY (BID) REFERENCES BILL(BID),

);

CREATE TABLE ONLINE_BILL
(
  DeliveryAddress NVARCHAR(255) NOT NULL,
  ShippingFee INT NOT NULL,
  UID INT NOT NULL,
  BID INT NOT NULL,
  PRIMARY KEY (BID),
  FOREIGN KEY (UID) REFERENCES USERS(UID),
  FOREIGN KEY (BID) REFERENCES BILL(BID),
  CONSTRAINT chk_shipfee CHECK (ShippingFee >= 0)
);



