CREATE TABLE COLLEGE
(
  CName VARCHAR(255) NOT NULL,
  COffice VARCHAR(255) NOT NULL,
  CPhone VARCHAR(15) NOT NULL,
  DeanId INT NOT NULL,
  PRIMARY KEY (CName),
  FOREIGN KEY (DeanId) REFERENCES INSTRUCTOR(Id)
);

CREATE TABLE DEPARTMENT
(
  DName VARCHAR(255) NOT NULL,
  DCode INT NOT NULL,
  DOffice VARCHAR(255) NOT NULL,
  DPhone VARCHAR(15) NOT NULL,
  CStartDate DATE NOT NULL,
  CName VARCHAR(255) NOT NULL,
  ChairId INT NOT NULL,
  PRIMARY KEY (DName),
  FOREIGN KEY (CName) REFERENCES COLLEGE(CName),
  FOREIGN KEY (ChairId) REFERENCES INSTRUCTOR(Id),
  UNIQUE (DCode)
);

CREATE TABLE COURSE
(
  CoName VARCHAR(255) NOT NULL,
  CoCode INT NOT NULL,
  CoLevel INT NOT NULL,
  CoCredits INT NOT NULL,
  CoDesc VARCHAR(1000) NOT NULL,
  DName VARCHAR(255) NOT NULL,
  PRIMARY KEY (CoName),
  FOREIGN KEY (DName) REFERENCES DEPARTMENT(DName),
  UNIQUE (CoCode)
);

CREATE TABLE INSTRUCTOR
(
  Id INT NOT NULL,
  IName VARCHAR(255) NOT NULL,
  IOffice VARCHAR(255) NOT NULL,
  IPhone VARCHAR(15) NOT NULL,
  IRank INT NOT NULL,
  DName VARCHAR(255) NOT NULL,
  PRIMARY KEY (Id),
  FOREIGN KEY (DName) REFERENCES DEPARTMENT(DName)
);

CREATE TABLE STUDENT
(
  FName VARCHAR(255) NOT NULL,
  MName VARCHAR(255) NOT NULL,
  LName VARCHAR(255) NOT NULL,
  SID INT NOT NULL,
  SAddress VARCHAR(255) NOT NULL,
  SPhone VARCHAR(15) NOT NULL,
  SMajor VARCHAR(100) NOT NULL,
  SDoB DATE NOT NULL,
  DName VARCHAR(255) NOT NULL,
  PRIMARY KEY (SID),
  FOREIGN KEY (DName) REFERENCES DEPARTMENT(DName)
);

CREATE TABLE SECTION
(
  SecNo INT NOT NULL,
  Sem INT NOT NULL,
  Bldg INT NOT NULL,
  RoomNo INT NOT NULL,
  Year INT NOT NULL,
  DoW VARCHAR(7) NOT NULL, -- DoW = Days of Week
  StartedTime TIME NOT NULL,
  SecId INT NOT NULL,
  EndedTime TIME NOT NULL,
  Id INT NOT NULL,
  CoName VARCHAR(255) NOT NULL,
  PRIMARY KEY (SecId),
  FOREIGN KEY (Id) REFERENCES INSTRUCTOR(Id),
  FOREIGN KEY (CoName) REFERENCES COURSE(CoName)
);

CREATE TABLE TAKES
(
  Grade INT NOT NULL,
  SID INT NOT NULL,
  SecId INT NOT NULL,
  PRIMARY KEY (SID, SecId),
  FOREIGN KEY (SID) REFERENCES STUDENT(SID),
  FOREIGN KEY (SecId) REFERENCES SECTION(SecId)
);
